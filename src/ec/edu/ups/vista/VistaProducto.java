/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ec.edu.ups.vista;

import ec.edu.ups.controlador.ControladorProducto;
import ec.edu.ups.modelo.Categoria;
import ec.edu.ups.modelo.Producto;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Josze
 */
public class VistaProducto extends javax.swing.JInternalFrame {

    private Date fechactual;
    private Categoria categoriaCombo;
    private String origenPr;
    private String estadoPr;
    private String ivaPr;
    ControladorProducto cp;
    Producto producto;
    DefaultTableModel dtm;
    Object[] o = new Object[11];

    /**
     * Creates new form VistaProducto
     */
    public VistaProducto() {
        initComponents();
        cp = new ControladorProducto();
        tCodigo.setText("" + cp.llenarIdProducto());
        tFechaRegistro.setText(getFechaActual());
        dtm = (DefaultTableModel) tbProductos.getModel();
        estadoPr = "activo";
        ivaPr = "todos";
        filtrarTabla();
        llenarComboBox();
        clickearTabla();

    }

    public String getFechaActual() {
        fechactual = new Date();
        String vFechaOK = new SimpleDateFormat("yyyy-MM-dd").format(this.fechactual);
        return vFechaOK;
    }

    public void llenarComboBox() {
        cp = new ControladorProducto();
        ArrayList<Categoria> listaCategoria = cp.llenarCombo();

        for (int i = 0; i < listaCategoria.size(); i++) {
            Categoria catItem = new Categoria(listaCategoria.get(i).getCat_id(),
                    listaCategoria.get(i).getCat_nombre());

            cbCategoria.addItem(catItem);
        }

    }

    public void llenarTabla() {
        dtm.setRowCount(0);
        dtm = (DefaultTableModel) tbProductos.getModel();
        cp.llenarTabla(dtm, o);
    }

    public void filtrarTabla() {
        dtm.setRowCount(0);
        dtm = (DefaultTableModel) tbProductos.getModel();
        cp.filtroTabla(dtm, o, estadoPr, ivaPr);
    }

    private void clickearTabla() {
        tbProductos.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent mouse_evt) {
                Point point = mouse_evt.getPoint();
                if (mouse_evt.getClickCount() == 2) {
                    tCodigo.setText(tbProductos.getValueAt(tbProductos.getSelectedRow(), 0).toString());
                    tCodBarras.setText(tbProductos.getValueAt(tbProductos.getSelectedRow(), 1).toString());
                    tFechaRegistro.setText(tbProductos.getValueAt(tbProductos.getSelectedRow(), 2).toString());
                    tNombre.setText(tbProductos.getValueAt(tbProductos.getSelectedRow(), 3).toString());
                    tPrecio.setText(tbProductos.getValueAt(tbProductos.getSelectedRow(), 4).toString());
                    tCantidad.setText(tbProductos.getValueAt(tbProductos.getSelectedRow(), 5).toString());
                    if (tbProductos.getValueAt(tbProductos.getSelectedRow(), 6).toString().equalsIgnoreCase("activo")) {
                        ltEstado.setText("Activo");
                    } else {
                        ltEstado.setText("Pasivo");
                    }
                    tUnidad.setText(tbProductos.getValueAt(tbProductos.getSelectedRow(), 7).toString());
                    if (tbProductos.getValueAt(tbProductos.getSelectedRow(), 8).toString().equalsIgnoreCase("nacional")) {
                        cbOrigen.setSelectedItem("Nacional");
                    } else {
                        cbOrigen.setSelectedItem("Extranjero");
                    }
                    if (tbProductos.getValueAt(tbProductos.getSelectedRow(), 9).toString().equalsIgnoreCase("si")) {
                        rbIVA.setSelected(true);
                    } else {
                        rbSinIVA.setSelected(true);
                    }
                    cbCategoria.setSelectedIndex(Integer.parseInt(tbProductos.getValueAt(tbProductos.getSelectedRow(), 10).toString()) - 1);
                }
            }
        });
    }

    private void limpiarTexto() {
        tCodigo.setText("" + cp.llenarIdProducto());
        tFechaRegistro.setText(getFechaActual());
        tNombre.setText("");
        tBuscar.setText("");
        tCantidad.setText("");
        tCodBarras.setText("");
        tUnidad.setText("");
        tPrecio.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgIVA = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbProductos = new javax.swing.JTable();
        pOpciones = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        lOpciones = new javax.swing.JLabel();
        bGuardar = new javax.swing.JButton();
        bActualizar = new javax.swing.JButton();
        bEstado = new javax.swing.JButton();
        bEliminar = new javax.swing.JButton();
        tBuscar = new javax.swing.JTextField();
        bBuscar = new javax.swing.JButton();
        cbEstado = new javax.swing.JComboBox<>();
        lEstado = new javax.swing.JLabel();
        lIVA = new javax.swing.JLabel();
        cbIVA = new javax.swing.JComboBox<>();
        pAgregarProducto = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        lAgregarProducto = new javax.swing.JLabel();
        lCodBarras = new javax.swing.JLabel();
        tCodBarras = new javax.swing.JTextField();
        lNombre = new javax.swing.JLabel();
        tNombre = new javax.swing.JTextField();
        lCantidad = new javax.swing.JLabel();
        tCantidad = new javax.swing.JTextField();
        lCategoria = new javax.swing.JLabel();
        cbCategoria = new javax.swing.JComboBox<>();
        lUnidad = new javax.swing.JLabel();
        tUnidad = new javax.swing.JTextField();
        lOrigen = new javax.swing.JLabel();
        cbOrigen = new javax.swing.JComboBox<>();
        lPrecio = new javax.swing.JLabel();
        rbIVA = new javax.swing.JRadioButton();
        rbSinIVA = new javax.swing.JRadioButton();
        lFechaRegistro = new javax.swing.JLabel();
        lCodigo = new javax.swing.JLabel();
        tCodigo = new javax.swing.JTextField();
        lTipo = new javax.swing.JLabel();
        ltEstado = new javax.swing.JLabel();
        tFechaRegistro = new javax.swing.JTextField();
        tPrecio = new javax.swing.JTextField();

        setClosable(true);
        setForeground(new java.awt.Color(0, 153, 51));
        setTitle("Productos");

        tbProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Cod. Barras", "Fecha Registro", "Nombre", "Precio", "Cantidad", "Estado", "Unidad", "Nacionalidad", "IVA", "Categoría"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbProductos);
        if (tbProductos.getColumnModel().getColumnCount() > 0) {
            tbProductos.getColumnModel().getColumn(0).setResizable(false);
            tbProductos.getColumnModel().getColumn(0).setPreferredWidth(40);
            tbProductos.getColumnModel().getColumn(9).setResizable(false);
            tbProductos.getColumnModel().getColumn(9).setPreferredWidth(35);
        }

        pOpciones.setToolTipText("Opciones");

        lOpciones.setFont(new java.awt.Font("sansserif", 1, 30)); // NOI18N
        lOpciones.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lOpciones.setText("Opciones");

        bGuardar.setText("Guardar");
        bGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGuardarActionPerformed(evt);
            }
        });

        bActualizar.setText("Actualizar");
        bActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bActualizarActionPerformed(evt);
            }
        });

        bEstado.setText("Cambiar Estado");
        bEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEstadoActionPerformed(evt);
            }
        });

        bEliminar.setText("Eliminar");
        bEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pOpcionesLayout = new javax.swing.GroupLayout(pOpciones);
        pOpciones.setLayout(pOpcionesLayout);
        pOpcionesLayout.setHorizontalGroup(
            pOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pOpcionesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pOpcionesLayout.createSequentialGroup()
                        .addGroup(pOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lOpciones, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                            .addComponent(jSeparator1))
                        .addContainerGap())
                    .addGroup(pOpcionesLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(pOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bEstado, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                            .addComponent(bEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pOpcionesLayout.setVerticalGroup(
            pOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pOpcionesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bGuardar)
                .addGap(18, 18, 18)
                .addComponent(bActualizar)
                .addGap(18, 18, 18)
                .addComponent(bEstado)
                .addGap(18, 18, 18)
                .addComponent(bEliminar)
                .addContainerGap())
        );

        bBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/edu/ups/imagenes/buscar.png"))); // NOI18N
        bBuscar.setText("Buscar");
        bBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBuscarActionPerformed(evt);
            }
        });

        cbEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Pasivo", "Todos" }));
        cbEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEstadoActionPerformed(evt);
            }
        });

        lEstado.setText("Estado:");

        lIVA.setText("IVA:");

        cbIVA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "con IVA", "sin IVA" }));
        cbIVA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbIVAActionPerformed(evt);
            }
        });

        pAgregarProducto.setToolTipText("Agregar Producto");

        lAgregarProducto.setFont(new java.awt.Font("sansserif", 1, 30)); // NOI18N
        lAgregarProducto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lAgregarProducto.setText("Agregar Producto");

        lCodBarras.setText("Código de Barras:");

        tCodBarras.setColumns(10);
        tCodBarras.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        lNombre.setText("Nombre:");

        lCantidad.setText("Cantidad:");

        lCategoria.setText("Categoría:");

        cbCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCategoriaActionPerformed(evt);
            }
        });

        lUnidad.setText("Unidad:");

        lOrigen.setText("Origen:");

        cbOrigen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nacional", "Extranjero" }));
        cbOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbOrigenActionPerformed(evt);
            }
        });

        lPrecio.setText("Precio:");

        bgIVA.add(rbIVA);
        rbIVA.setSelected(true);
        rbIVA.setText("con IVA");

        bgIVA.add(rbSinIVA);
        rbSinIVA.setText("sin IVA");

        lFechaRegistro.setText("Fecha de Registro:");

        lCodigo.setText("Código:");

        tCodigo.setEditable(false);

        lTipo.setText("Estado:");

        tFechaRegistro.setEditable(false);

        javax.swing.GroupLayout pAgregarProductoLayout = new javax.swing.GroupLayout(pAgregarProducto);
        pAgregarProducto.setLayout(pAgregarProductoLayout);
        pAgregarProductoLayout.setHorizontalGroup(
            pAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAgregarProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lAgregarProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pAgregarProductoLayout.createSequentialGroup()
                        .addGroup(pAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pAgregarProductoLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(pAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lCodBarras)
                                    .addComponent(lFechaRegistro)
                                    .addComponent(lNombre)
                                    .addComponent(lCantidad)
                                    .addComponent(lPrecio))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pAgregarProductoLayout.createSequentialGroup()
                                        .addComponent(tFechaRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lCodigo))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pAgregarProductoLayout.createSequentialGroup()
                                        .addGroup(pAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(pAgregarProductoLayout.createSequentialGroup()
                                                .addGroup(pAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(tCodBarras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(tNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(pAgregarProductoLayout.createSequentialGroup()
                                                .addComponent(tCantidad, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                                                .addGap(237, 237, 237)))
                                        .addGroup(pAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lCategoria)
                                            .addGroup(pAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(lOrigen)
                                                .addComponent(lUnidad))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pAgregarProductoLayout.createSequentialGroup()
                                        .addComponent(tPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lTipo)
                                        .addGap(3, 3, 3)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbCategoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tUnidad, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cbOrigen, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(pAgregarProductoLayout.createSequentialGroup()
                                        .addGroup(pAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(pAgregarProductoLayout.createSequentialGroup()
                                                .addComponent(rbIVA)
                                                .addGap(18, 18, 18)
                                                .addComponent(rbSinIVA))
                                            .addComponent(ltEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 9, Short.MAX_VALUE))))
                            .addComponent(jSeparator2))
                        .addContainerGap())))
        );
        pAgregarProductoLayout.setVerticalGroup(
            pAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAgregarProductoLayout.createSequentialGroup()
                .addComponent(lAgregarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(pAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lFechaRegistro)
                        .addComponent(tFechaRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lCodigo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pAgregarProductoLayout.createSequentialGroup()
                        .addGroup(pAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lCodBarras)
                            .addComponent(tCodBarras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lNombre)))
                    .addGroup(pAgregarProductoLayout.createSequentialGroup()
                        .addGroup(pAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lCategoria))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tUnidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lUnidad))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pAgregarProductoLayout.createSequentialGroup()
                        .addGroup(pAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lCantidad)
                            .addComponent(tCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lPrecio)
                            .addComponent(tPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pAgregarProductoLayout.createSequentialGroup()
                        .addGroup(pAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lOrigen))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbIVA)
                            .addComponent(rbSinIVA))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addGroup(pAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lTipo)
                            .addComponent(ltEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pAgregarProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(tBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bBuscar)
                        .addGap(50, 50, 50)
                        .addComponent(lEstado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lIVA)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbIVA, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pOpciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pAgregarProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bBuscar)
                    .addComponent(cbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lEstado)
                    .addComponent(lIVA)
                    .addComponent(cbIVA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEstadoActionPerformed
        if (cbEstado.getSelectedIndex() == 0) {
            estadoPr = "activo";
        } else if (cbEstado.getSelectedIndex() == 1) {
            estadoPr = "pasivo";
        } else if (cbEstado.getSelectedIndex() == 2) {
            estadoPr = "todos";
        }
        filtrarTabla();
    }//GEN-LAST:event_cbEstadoActionPerformed

    private void bGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGuardarActionPerformed
        tCodigo.setText("" + cp.llenarIdProducto());
        tFechaRegistro.setText(getFechaActual());
        if (tCodBarras.getText().isEmpty() || tNombre.getText().isEmpty() || tCantidad.getText().isEmpty()
                || tPrecio.getText().isEmpty() || tUnidad.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campos vacíos", "Advertencia",
                    JOptionPane.WARNING_MESSAGE);
        } else {

            producto = new Producto();
            producto.setPrd_id(Integer.parseInt(tCodigo.getText()));
            producto.setPrd_cbarra(tCodBarras.getText());
            SimpleDateFormat formatoDelTexto = new SimpleDateFormat("yyyy-MM-dd");
            String strFecha = tFechaRegistro.getText();
            Date fecha = null;
            try {
                fecha = formatoDelTexto.parse(strFecha);
            } catch (ParseException ex) {
                ex.printStackTrace();
            }
            java.sql.Date fin2 = new java.sql.Date(fecha.getTime());
            producto.setPrd_fecha_registro(fin2);
            producto.setPrd_nombre(tNombre.getText());
            producto.setPrd_precio(Double.parseDouble(tPrecio.getText()));
            producto.setPrd_stock(Double.parseDouble(tCantidad.getText()));
            producto.setPrd_estado("a");
            producto.setPrd_unidad(tUnidad.getText());
            producto.setPrd_origen(origenPr);
            if (rbIVA.isSelected()) {
                producto.setPrd_iva(true);
            } else if (rbSinIVA.isSelected()) {
                producto.setPrd_iva(false);
            }
            producto.setCategoria(categoriaCombo);
            if (cp.crearProducto(producto) == true) {
                JOptionPane.showMessageDialog(this, "Se ha creado el producto",
                        "Correcto", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Error al crear producto",
                        "Incorrecto", JOptionPane.WARNING_MESSAGE);
            }
        }
        limpiarTexto();
        filtrarTabla();

    }//GEN-LAST:event_bGuardarActionPerformed

    private void bActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bActualizarActionPerformed
        if (tCodBarras.getText().isEmpty() || tNombre.getText().isEmpty() || tCantidad.getText().isEmpty()
                || tPrecio.getText().isEmpty() || tUnidad.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campos vacíos", "Advertencia",
                    JOptionPane.WARNING_MESSAGE);
        } else {

            producto = new Producto();
            producto.setPrd_id(Integer.parseInt(tCodigo.getText()));
            producto.setPrd_cbarra(tCodBarras.getText());
            producto.setPrd_nombre(tNombre.getText());
            producto.setPrd_precio(Double.parseDouble(tPrecio.getText()));
            producto.setPrd_stock(Double.parseDouble(tCantidad.getText()));
            producto.setPrd_unidad(tUnidad.getText());
            producto.setPrd_origen(origenPr);
            if (rbIVA.isSelected()) {
                producto.setPrd_iva(true);
            } else if (rbSinIVA.isSelected()) {
                producto.setPrd_iva(false);
            }
            producto.setCategoria(categoriaCombo);
            if (cp.editarProducto(producto) == true) {
                JOptionPane.showMessageDialog(this, "Se ha editado el producto",
                        "Correcto", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Error al editar producto",
                        "Incorrecto", JOptionPane.WARNING_MESSAGE);
            }
        }
        limpiarTexto();
        filtrarTabla();
    }//GEN-LAST:event_bActualizarActionPerformed

    private void bEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEstadoActionPerformed
        if (tCodBarras.getText().isEmpty() || tNombre.getText().isEmpty() || tCantidad.getText().isEmpty()
                || tPrecio.getText().isEmpty() || tUnidad.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campos vacíos", "Advertencia",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            producto = new Producto();
            producto.setPrd_id(Integer.parseInt(tCodigo.getText()));
            producto.setPrd_estado(ltEstado.getText());
            if (cp.cambiarEstadoProducto(producto) == true) {
                JOptionPane.showMessageDialog(this, "Se ha cambiado el estado del producto",
                        "Correcto", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "No se pudo cambiar el estado",
                        "Incorrecto", JOptionPane.WARNING_MESSAGE);
            }
        }
        limpiarTexto();
        filtrarTabla();
    }//GEN-LAST:event_bEstadoActionPerformed

    private void bEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarActionPerformed
        if (tCodBarras.getText().isEmpty() || tNombre.getText().isEmpty() || tCantidad.getText().isEmpty()
                || tPrecio.getText().isEmpty() || tUnidad.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campos vacíos", "Advertencia",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            if (cp.eliminarProducto(Integer.parseInt(tCodigo.getText())) == true) {
                JOptionPane.showMessageDialog(this, "Se ha eliminado el producto",
                        "Correcto", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Producto ocupado en facturas",
                        "Incorrecto", JOptionPane.WARNING_MESSAGE);
            }
        }
        limpiarTexto();
        filtrarTabla();
    }//GEN-LAST:event_bEliminarActionPerformed

    private void bBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBuscarActionPerformed
        String palabra = tBuscar.getText();
        dtm.setRowCount(0);
        dtm = (DefaultTableModel) tbProductos.getModel();
        cp.buscarProducto(dtm, o, palabra);
    }//GEN-LAST:event_bBuscarActionPerformed

    private void cbCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCategoriaActionPerformed
        categoriaCombo = (Categoria) cbCategoria.getSelectedItem();
    }//GEN-LAST:event_cbCategoriaActionPerformed

    private void cbOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbOrigenActionPerformed
        if (cbOrigen.getSelectedIndex() == 0) {
            origenPr = "n";
        } else if (cbOrigen.getSelectedIndex() == 1) {
            origenPr = "e";
        }
    }//GEN-LAST:event_cbOrigenActionPerformed

    private void cbIVAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbIVAActionPerformed
        if (cbIVA.getSelectedIndex() == 0) {
            ivaPr = "todos";
        } else if (cbIVA.getSelectedIndex() == 1) {
            ivaPr = "con iva";
        } else if (cbIVA.getSelectedIndex() == 2) {
            ivaPr = "sin iva";
        }
        filtrarTabla();
    }//GEN-LAST:event_cbIVAActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bActualizar;
    private javax.swing.JButton bBuscar;
    private javax.swing.JButton bEliminar;
    private javax.swing.JButton bEstado;
    private javax.swing.JButton bGuardar;
    private javax.swing.ButtonGroup bgIVA;
    private javax.swing.JComboBox<Categoria> cbCategoria;
    private javax.swing.JComboBox<String> cbEstado;
    private javax.swing.JComboBox<String> cbIVA;
    private javax.swing.JComboBox<String> cbOrigen;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lAgregarProducto;
    private javax.swing.JLabel lCantidad;
    private javax.swing.JLabel lCategoria;
    private javax.swing.JLabel lCodBarras;
    private javax.swing.JLabel lCodigo;
    private javax.swing.JLabel lEstado;
    private javax.swing.JLabel lFechaRegistro;
    private javax.swing.JLabel lIVA;
    private javax.swing.JLabel lNombre;
    private javax.swing.JLabel lOpciones;
    private javax.swing.JLabel lOrigen;
    private javax.swing.JLabel lPrecio;
    private javax.swing.JLabel lTipo;
    private javax.swing.JLabel lUnidad;
    private javax.swing.JLabel ltEstado;
    private javax.swing.JPanel pAgregarProducto;
    private javax.swing.JPanel pOpciones;
    private javax.swing.JRadioButton rbIVA;
    private javax.swing.JRadioButton rbSinIVA;
    private javax.swing.JTextField tBuscar;
    private javax.swing.JTextField tCantidad;
    private javax.swing.JTextField tCodBarras;
    private javax.swing.JTextField tCodigo;
    private javax.swing.JTextField tFechaRegistro;
    private javax.swing.JTextField tNombre;
    private javax.swing.JTextField tPrecio;
    private javax.swing.JTextField tUnidad;
    private javax.swing.JTable tbProductos;
    // End of variables declaration//GEN-END:variables
}
